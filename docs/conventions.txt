1. Naming follows STL:

 - Library uses zbs namespace and a bunch of nested namespaces.
 - Everything uses lower-case letters with underscores.
 - Macros use upper-case letters with underscores, ZBS_ prefix is mandatory.
 - Private class members are always prefixed with _.
 - Private macros are prefixed with _ZBS_.
 - Private functions use zbs::detail namespace without any prefixes.
 - Private, but public header files are prefixed with _.

By private-public header files I mean those that have to be distributed as
public ones due to the fact that templates implementation code resides in
header files.

2. Formatting is defined by a couple of simple rules:

 - Line starts with a non-space character or one or more tabs.
 - Lines ends with a '\n' character.
 - Everything else is free form, but should be consistent within boundaries
   of a single file.

3. Pointers vs. references as function parameters.

Use pointers when:
 - The function has a side effect of saving the subject parameter after the call ends.
 - The subject parameter is an OUT parameter (returns something).

Use references when:
 - The function doesn't save the subject parameter.
 - The function does not modify the subject parameter (use const & in that case).
